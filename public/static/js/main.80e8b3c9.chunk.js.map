{"version":3,"sources":["helpers/fetch.js","types/types.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","components/auth/hooks/useForm.js","components/auth/LoginScreen.js","actions/ui.js","components/ui/NavBar.js","components/calendar/CalendarEvent.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeletedEventFAB.js","components/calendar/CalendarScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","types","prepareEvents","events","map","e","end","moment","toDate","start","eventAddNew","event","type","payload","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","lEmail","lPassword","formLoginValues","handleLoginInputChange","useDispatch","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","uiOpenModal","NavBar","useSelector","state","auth","onClick","CalendarEvent","title","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowplus1","clone","initEvent","notes","CalendarModal","modalOpen","ui","activeEvent","calendar","formValues","setformValues","useEffect","dateStart","setdateStart","dateEnd","setdateEnd","titleValid","settitleValid","closeModal","isOpen","overlayClassName","onRequestClose","style","closeTimeoutMS","contentLabel","momentStart","momentEnd","isSameOrAfter","trim","length","id","getState","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeletedEventFAB","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","startAccesor","endAccessor","eventPropGetter","isSelected","backgroundColor","_id","borderRadius","opacity","display","color","view","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","checking","exact","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.80e8b3c9.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nconst fetchSinToken = (endpoint,data,method= \"GET\") =>{\r\n    \r\n    const url = `${ baseUrl }/${endpoint}`;\r\n\r\n    if ( method === \"GET\"){\r\n        return fetch(url);\r\n    } else{\r\n        return fetch(url,{\r\n            method,\r\n            headers:{\r\n                \"Content-type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n}\r\n\r\n\r\nconst fetchConToken = (endpoint,data,method= \"GET\") =>{\r\n    \r\n    const url = `${ baseUrl }/${endpoint}`;\r\n    const token = localStorage.getItem(\"token\") || \"\";\r\n\r\n    if ( method === \"GET\"){\r\n        return fetch(url,{\r\n            method,\r\n            headers:{\r\n                \"x-token\": token\r\n            }\r\n        });\r\n    } else{\r\n        return fetch(url,{\r\n            method,\r\n            headers:{\r\n                \"Content-type\": \"application/json\",\r\n                \"x-token\": token\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n}\r\n\r\n\r\n\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken\r\n}","\r\nexport const types = {\r\n    uiOpenModal: \"[ui] Open Modal\",\r\n    uiCloseModal: \"[ui] Close Modal\",\r\n\r\n    eventSetActive: \"[event] Set Active\",\r\n    eventLogout: \"[event] Clear event logout\",\r\n    eventAddNew: \"[event] Add New\",\r\n\r\n    eventClearActiveEvent: \"[event] Clear active event\",\r\n\r\n    eventUpdated: \"[event] Event updated\",\r\n\r\n    eventDeleted: \"[event] Event Deleted\",\r\n\r\n    eventLoaded: \"[event] Events Loaded\",\r\n\r\n    eventStartAddNew: \"[event] Start add new\",\r\n    authCheckingFinish: \"[auth] Finish checking login state\",\r\n    authStartLogin: \"[auth] Start login\",\r\n    authLogin: \"[auth] Login\",\r\n    authStartRegister: \"[auth] Start Register\",\r\n    authStartTokenRenew: \"[auth] Start token renew\",\r\n    authLogout: \"[auth] Logout\"\r\n\r\n\r\n}","import moment from \"moment\";\r\n\r\nexport const prepareEvents = (events = []) =>{\r\n    return events.map(\r\n        (e) =>({\r\n            ...e,\r\n            end: moment(e.end).toDate(),\r\n            start: moment(e.start).toDate()\r\n        })\r\n    )\r\n}","import Swal from \"sweetalert2\";\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\"\r\n\r\n\r\nexport const eventStartAddNew = (event) =>{\r\n    return async(dispatch, getState) => {\r\n\r\n        const {uid,name} = getState().auth;\r\n\r\n        try {\r\n        const resp = await fetchConToken(\"events\", event, \"POST\");\r\n        const body = await resp.json();\r\n\r\n        if(body.ok){\r\n\r\n            event.id = body.event.id;\r\n            event.user = {\r\n                id: uid,\r\n                name: name \r\n            }\r\n            dispatch(eventAddNew(event));\r\n        }\r\n        \r\n        } catch (error) {\r\n            \r\n        }\r\n\r\n        \r\n    }\r\n}\r\n\r\nconst eventAddNew = (event) =>({ \r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\nexport const eventSetActive = (event) =>({ \r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\nexport const eventClearActiveEvent = () => ({\r\n    type: types.eventClearActiveEvent\r\n\r\n});\r\n\r\nexport const eventStartUpdate = (event) => {\r\n    return async(dispatch) =>{\r\n\r\n        try {\r\n            const resp = await fetchConToken(`events/${event.id}`, event, \"PUT\" );\r\n            const body = await resp.json();\r\n\r\n            if(body.ok){\r\n                dispatch(eventUpdated(event));\r\n            }else{\r\n                Swal.fire(\"error\", body.msg, \"error\");\r\n\r\n            }\r\n\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n}\r\n\r\nconst eventUpdated = (event) =>({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n});\r\n\r\nexport const eventStartDeleted = () =>{\r\n    return async(dispatch, getState) =>{\r\n\r\n        const {id} = getState().calendar.activeEvent;\r\n        \r\n        try {\r\n            const resp = await fetchConToken(`events/${id}`, {} , \"DELETE\" );\r\n            const body = await resp.json();\r\n\r\n            if(body.ok){\r\n                dispatch(eventDeleted() );\r\n            }else{\r\n                Swal.fire(\"error\", body.msg, \"error\");\r\n\r\n            }\r\n\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n}\r\n\r\nconst eventDeleted = () =>({\r\n    type: types.eventDeleted });\r\n\r\nexport const eventStartLoading = () =>{\r\n    return async(dispatch) => {\r\n\r\n\r\n        try {\r\n            const resp = await fetchConToken(\"events\");\r\n            const body = await resp.json();\r\n\r\n            const events = prepareEvents( body.events);\r\n            \r\n            dispatch(eventLoaded(events));\r\n\r\n        } catch (error) {\r\n            \r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload:events\r\n});\r\n\r\nexport const eventLogout = () => ({ type: types.eventLogout });","import { fetchConToken, fetchSinToken } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\nimport Swal from \"sweetalert2\";\r\nimport { eventLogout } from \"./events\";\r\n\r\n\r\nexport const startLogin = (email,password) =>{\r\n    return async(dispatch) => {\r\n\r\n        const resp = await fetchSinToken(\"auth\",{email,password}, \"POST\");\r\n        const body = await resp.json();\r\n\r\n        if(body.ok){\r\n            localStorage.setItem(\"token\", body.token);\r\n            localStorage.setItem(\"token-init-date\", new Date().getTime() );\r\n        \r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n\r\n        } else{\r\n            Swal.fire(\"Error\", body.msg, \"error\");\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const startRegister = (name,email,password) =>{\r\n    return async(dispatch) =>{\r\n\r\n        const resp = await fetchSinToken(\"auth/new\",{name,email,password}, \"POST\");\r\n        const body = await resp.json();\r\n\r\n        if(body.ok){\r\n            localStorage.setItem(\"token\", body.token);\r\n            localStorage.setItem(\"token-init-date\", new Date().getTime() );\r\n        \r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n\r\n        } else{\r\n            Swal.fire(\"Error\", body.msg, \"error\");\r\n        }\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const startChecking = () =>{\r\n    return async(dispatch) => {\r\n\r\n        const resp = await fetchConToken(\"auth/renew\");\r\n        const body = await resp.json();\r\n\r\n        if(body.ok){\r\n            localStorage.setItem(\"token\", body.token);\r\n            localStorage.setItem(\"token-init-date\", new Date().getTime() );\r\n        \r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n\r\n        } else{\r\n            dispatch( checkingFinish() );\r\n        }       \r\n    }\r\n}\r\n\r\nconst checkingFinish = () =>({\r\n    type: types.authCheckingFinish\r\n});\r\n\r\nconst login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\nexport const startLogout = () =>{\r\n    return (dispatch) =>{\r\n        localStorage.clear();\r\n        dispatch(eventLogout() );\r\n        dispatch(logout() );\r\n    }\r\n}\r\n\r\nconst logout = () => ({ type:types.authLogout});\r\n","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from './hooks/useForm';\r\nimport './login.css';\r\nimport { useDispatch } from \"react-redux\";\r\nimport Swal from 'sweetalert2';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const [ formLoginValues, handleLoginInputChange ] = useForm({\r\n        lEmail: \"randyax1@gmail.com\",\r\n        lPassword: \"123456\"\r\n    });\r\n\r\n    const {lEmail,lPassword} = formLoginValues;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch(startLogin(lEmail,lPassword));\r\n\r\n    }\r\n\r\n\r\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\r\n        rName: \"Ranulfo Alberto Einstein\",\r\n        rEmail: \"ranuleinstein@gmail.com\",\r\n        rPassword1: \"123456\",\r\n        rPassword2: \"123456\"\r\n    });\r\n\r\n    const {rName, rEmail,rPassword1, rPassword2} = formRegisterValues;\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n        \r\n        if(rPassword1 !== rPassword2){\r\n            return Swal.fire (\"Error\", \"Las contraseñas deben de ser iguales.\",\"error\");\r\n        }\r\n\r\n        dispatch(startRegister(rName, rEmail,rPassword1));\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Login</h3>\r\n\r\n                    <form onSubmit={handleLogin}>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Email\"\r\n                                name=\"lEmail\"\r\n                                value={lEmail}\r\n                                onChange={handleLoginInputChange}\r\n\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Password\"\r\n                                name=\"lPassword\"\r\n                                value={lPassword}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Register</h3>\r\n                    <form onSubmit={handleRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Name\"\r\n                                name=\"rName\"\r\n                                value={rName}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Email\"\r\n                                name=\"rEmail\"\r\n                                value={rEmail}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Password\" \r\n                                name=\"rPassword1\"\r\n                                value={rPassword1}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Confirm Password\" \r\n                                name=\"rPassword2\"\r\n                                value={rPassword2}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Create Account\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { types } from \"../types/types\"\r\n\r\nexport const uiOpenModal = () =>({ type: types.uiOpenModal });\r\nexport const uiCloseModal = () =>({ type: types.uiCloseModal });\r\n\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const NavBar = () => {\r\n\r\n    const {name} = useSelector(state => state.auth)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogout = () =>{\r\n        dispatch(startLogout() );\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                {name}\r\n            </span>\r\n\r\n            <button \r\n            onClick={handleLogout}\r\n            className=\"btn btn-outline-danger\"\r\n            >\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Sign Off</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n\r\n    const {title, user} = event;\r\n\r\n    return (\r\n        <div>\r\n            <strong>{title}</strong>\r\n            <span> Writted by: {user.name}</span>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { uiCloseModal } from \"../../actions/ui\"\r\n\r\n\r\nimport moment from \"moment\";\r\nimport Modal from \"react-modal\";\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport Swal from \"sweetalert2\";\r\nimport { eventClearActiveEvent,eventStartAddNew,eventStartUpdate } from '../../actions/events';\r\n\r\nconst customStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)'\r\n    }\r\n  };\r\n\r\n  Modal.setAppElement('#root');\r\n\r\n  const now = moment().minutes(0).seconds(0).add(1,\"hours\");\r\n  const nowplus1 = now.clone().add(1,\"hours\");\r\n\r\n  const initEvent = {\r\n    \r\n    title: \"\",\r\n    notes: \"\",\r\n    start: now.toDate(),\r\n    end: nowplus1.toDate()\r\n  }\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {modalOpen} = useSelector(state => state.ui)\r\n    const {activeEvent} = useSelector(state => state.calendar)\r\n\r\n    const [formValues, setformValues] = useState(initEvent);\r\n\r\n    const {notes, title, start, end} = formValues;\r\n\r\n    useEffect(() => {\r\n        if(activeEvent){\r\n            setformValues(activeEvent);\r\n        } else{\r\n            setformValues(initEvent);\r\n        }\r\n\r\n    }, [activeEvent,setformValues]);\r\n\r\n    const handleInputChange = ({target}) =>{\r\n        setformValues({\r\n        ...formValues,\r\n        [target.name]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    const [dateStart, setdateStart] = useState(now.toDate());\r\n    const [dateEnd, setdateEnd] = useState(nowplus1.toDate());\r\n    const [titleValid, settitleValid] = useState(true);\r\n\r\n\r\n    const handleStartDateChange = (e) => {\r\n        setdateStart(e);\r\n\r\n        setformValues({\r\n            ...formValues,\r\n            start: e\r\n        })\r\n    }\r\n\r\n    const handleEndDateChange = (e) => {\r\n        setdateEnd(e);\r\n\r\n        setformValues({\r\n            ...formValues,\r\n            end: e\r\n        })\r\n    }\r\n\r\n\r\n\r\n      const closeModal = () =>{\r\n        //TODO: close the modal\r\n        dispatch(uiCloseModal());\r\n        dispatch(eventClearActiveEvent);\r\n        setformValues(initEvent);\r\n      }\r\n\r\n      const handleSubmitForm = (e) =>{\r\n        e.preventDefault();\r\n\r\n        const momentStart = moment(start);\r\n        const momentEnd = moment(end);\r\n\r\n        if(momentStart.isSameOrAfter(momentEnd)){\r\n            \r\n            return Swal.fire(\"Error\",\"The end date must be greater than the start date\", \"error\");\r\n            \r\n        }\r\n\r\n        if(title.trim().length <2){\r\n\r\n            return settitleValid(false);\r\n\r\n        }\r\n\r\n        //TODO: make recording\r\n        if (activeEvent){\r\n            dispatch(eventStartUpdate(formValues))\r\n        } else {\r\n    \r\n        dispatch(eventStartAddNew(formValues) );\r\n        \r\n        }\r\n\r\n        settitleValid(true);\r\n        closeModal();\r\n\r\n      }\r\n\r\n    return (\r\n\r\n        <Modal\r\n        isOpen={modalOpen}\r\n        className=\"modal\"\r\n        overlayClassName=\"modal-fondo\"\r\n        //onAfterOpen={afterOpenModal}\r\n        onRequestClose={closeModal}\r\n        style={customStyles}\r\n        closeTimeoutMS={200}\r\n        contentLabel=\"Example Modal\"\r\n        >\r\n\r\n\r\n<h1> {(activeEvent)? \"Edit event\": \"New event\"} </h1>\r\n<hr />\r\n\r\n<form \r\nclassName=\"container\"\r\nonSubmit={handleSubmitForm}\r\n>\r\n\r\n    <div className=\"form-group\">\r\n        <label>Date and Start time</label>\r\n        <DateTimePicker\r\n        onChange={handleStartDateChange}\r\n        value={dateStart}\r\n        className=\"form-control\"\r\n      />\r\n    </div>\r\n\r\n    <div className=\"form-group\">\r\n        <label>Date and End time</label>\r\n        <DateTimePicker\r\n        onChange={handleEndDateChange}\r\n        value={dateEnd}\r\n        minDate={dateStart}\r\n        className=\"form-control\"        \r\n      />\r\n\r\n    </div>\r\n\r\n    <hr />\r\n    <div className=\"form-group\">\r\n        <label>Title and notes</label>\r\n        <input \r\n            type=\"text\" \r\n            className={`form-control ${!titleValid && \"is-invalid\"}`}\r\n            placeholder=\"Títle of event\"\r\n            name=\"title\"\r\n            autoComplete=\"off\"\r\n            value={title}\r\n            onChange={handleInputChange}\r\n        />\r\n        <small id=\"emailHelp\" className=\"form-text text-muted\">A short description</small>\r\n    </div>\r\n\r\n    <div className=\"form-group\">\r\n        <textarea \r\n            type=\"text\" \r\n            className=\"form-control\"\r\n            placeholder=\"Notes\"\r\n            rows=\"5\"\r\n            name=\"notes\"\r\n            value={notes}\r\n            onChange={handleInputChange}\r\n        ></textarea>\r\n        <small id=\"emailHelp\" className=\"form-text text-muted\">Additional Information</small>\r\n    </div>\r\n\r\n    <button\r\n        type=\"submit\"\r\n        className=\"btn btn-outline-primary btn-block\"\r\n    >\r\n        <i className=\"far fa-save\"></i>\r\n        <span> Save Event</span>\r\n    </button>\r\n\r\n</form>\r\n\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClickNew = (e) =>{\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    return (\r\n        <button \r\n        className=\"btn btn-success fab\"\r\n        onClick={handleClickNew}\r\n        >\r\n        <i className=\"fas fa-plus\"></i>\r\n\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { eventStartDeleted } from \"../../actions/events\";\r\n\r\nexport const DeletedEventFAB = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () =>{\r\n        dispatch(eventStartDeleted());\r\n    }\r\n\r\n    return (\r\n        <button\r\n        onClick={handleDelete}\r\n        className=\"btn btn-danger fab-danger\">\r\n        <i className=\"fas fa-trash\"></i>\r\n        <span> Deleted event</span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { uiOpenModal } from \"../../actions/ui\"\r\n\r\nimport { NavBar } from '../ui/NavBar';\r\nimport {Calendar, momentLocalizer} from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeletedEventFAB } from '../ui/DeletedEventFAB';\r\n\r\n\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {events, activeEvent} = useSelector(state => state.calendar);\r\n    const {uid} = useSelector(state => state.auth);\r\n\r\n    // TODO: Leer eventos del store \r\n    \r\n    const [lastView, setLastView] = useState(localStorage.getItem(\"lastView\") || \"month\" );\r\n\r\n    useEffect(() => {\r\n       \r\n        dispatch( eventStartLoading() );\r\n\r\n    }, [dispatch]);\r\n\r\n\r\n    const onDoubleClick = (e) =>{\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    const onSelectEvent = (e) =>{\r\n        dispatch(eventSetActive(e));\r\n\r\n    }\r\n\r\n    const onViewChange = (e) =>{\r\n        setLastView(e);\r\n        localStorage.setItem(\"lastView\",e);\r\n\r\n    }\r\n\r\n    const onSelectSlot = (e) =>{\r\n        dispatch(eventClearActiveEvent());\r\n    }\r\n\r\n    const eventStyleGetter = (event,start,end,isSelected) =>{\r\n        \r\n        const style ={\r\n            backgroundColor: (uid === event.user._id) ? \"#367CF7\" : \"#465660\",\r\n            borderRadius: \"0px\",\r\n            opacity: 0.8,\r\n            display: \"block\",\r\n            color: \"white\"\r\n        }\r\n        \r\n        return{\r\n            style\r\n        }\r\n\r\n    };\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <NavBar/>\r\n\r\n            <Calendar \r\n            localizer={localizer}\r\n            events={events}\r\n            onDoubleClickEvent={onDoubleClick}\r\n            onSelectEvent={onSelectEvent}\r\n            onView={onViewChange}\r\n            onSelectSlot={onSelectSlot}\r\n            selectable={true}\r\n            startAccesor=\"start\"\r\n            endAccessor=\"end\"\r\n            eventPropGetter={eventStyleGetter}\r\n            view={lastView}            \r\n            components={{\r\n                event: CalendarEvent\r\n            }}\r\n\r\n            />\r\n        \r\n        <AddNewFab/>\r\n        \r\n        {\r\n            (activeEvent) && <DeletedEventFAB/>\r\n        }\r\n        \r\n        <CalendarModal/>\r\n        </div>\r\n        )}","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n    \r\n}) => {\r\n    \r\n\r\n    return (\r\n       <Route {...rest}\r\n       component={ (props) => (\r\n        (isAuthenticated)\r\n        ? ( <Component {...props} /> )\r\n        : ( <Redirect to=\"/login\" />)\r\n\r\n       )}\r\n\r\n       />\r\n    )\r\n}\r\n \r\nPrivateRoute.propTypes = {\r\nisAuthenticated: PropTypes.bool.isRequired,\r\ncomponent: PropTypes.func.isRequired\r\n}\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n    \r\n}) => {\r\n    \r\n    return (\r\n       <Route {...rest}\r\n       component={ (props) => (\r\n        (isAuthenticated)\r\n        ? ( <Redirect to=\"/\" /> )\r\n        : ( <Component {...props} /> )\r\n\r\n       )}\r\n\r\n       />\r\n    )\r\n}\r\n \r\nPublicRoute.propTypes = {\r\nisAuthenticated: PropTypes.bool.isRequired,\r\ncomponent: PropTypes.func.isRequired\r\n}","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Redirect,\r\n  BrowserRouter as Router,\r\n  Switch,\r\n} from \"react-router-dom\";\r\n\r\n\r\nimport { startChecking } from \"../actions/auth\";\r\nimport { LoginScreen } from \"../components/auth/LoginScreen\";\r\nimport { CalendarScreen } from \"../components/calendar/CalendarScreen\";\r\nimport { PrivateRoute } from \"./PrivateRoute\";\r\nimport { PublicRoute } from \"./PublicRoute\";\r\n\r\n\r\nexport const AppRouter = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const {checking, uid} = useSelector(state => state.auth)\r\n    \r\n  useEffect(() => {\r\n   dispatch(startChecking());\r\n    \r\n  }, [dispatch]);\r\n\r\n  if(checking){\r\n    return(<h5>Wait...</h5>)\r\n  }\r\n\r\n    return (\r\n       \r\n        <Router>\r\n        <div>\r\n        \r\n        <Switch>\r\n\r\n           <PublicRoute \r\n           exact\r\n           path=\"/login\" \r\n           component={LoginScreen}\r\n           isAuthenticated={ !!uid}\r\n           >\r\n\r\n           </PublicRoute>\r\n\r\n           <PrivateRoute\r\n           exact \r\n           path=\"/\" \r\n           component={CalendarScreen}\r\n           isAuthenticated={ !!uid}\r\n           >\r\n\r\n           </PrivateRoute>\r\n\r\n           <Redirect to=\"/\" /> \r\n        \r\n        </Switch>\r\n        \r\n        </div>\r\n        </Router>\r\n\r\n\r\n\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n// {\r\n//     id: \"\",\r\n//     title:\"Cumpleaños del Boss\",\r\n//     start: moment().toDate(),\r\n//     end: moment().add(2, \"hours\").toDate(),\r\n//     notes: \"Buy the cake\",\r\n//     user: {\r\n//         _id: \"123\",\r\n//         name: \"Randall\"\r\n//     }\r\n// }\r\n\r\n\r\nconst initialState = {\r\nevents:[],\r\nactiveEvent:null\r\n}\r\n\r\nexport const calendarReducer = (state = initialState,action) =>{\r\n\r\n    switch (action.type) {\r\n        \r\n        case types.eventSetActive:\r\n            return{\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n\r\n        case types.eventAddNew:\r\n            return{\r\n                ...state,\r\n                events:[ \r\n                ...state.events,\r\n                action.payload\r\n                ]\r\n                \r\n                }\r\n        \r\n        case types.eventClearActiveEvent:\r\n            return{\r\n                ...state,\r\n                activeEvent: null,\r\n            }\r\n\r\n        case types.eventUpdated:\r\n            return{\r\n                ...state,\r\n                events: state.events.map(\r\n                    e => (e.id === action.payload.id) ? action.payload : e\r\n                )\r\n            }\r\n\r\n        case types.eventDeleted:\r\n            return{\r\n                ...state,\r\n                events: state.events.filter(\r\n                    e => (e.id !== state.activeEvent.id)\r\n                ),\r\n                activeEvent: null\r\n            }    \r\n\r\n            case types.eventLoaded:\r\n                return{\r\n                    ...state,\r\n                    events:[...action.payload]\r\n                }\r\n\r\n            case types.eventLogout:\r\n                return{\r\n                    ...initialState\r\n                }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState ={\r\nmodalOpen: false,\r\n}\r\n\r\nexport const uiReducer = (state = initialState,action) =>{\r\n\r\n    switch (action.type) {\r\n\r\n       case types.uiOpenModal:\r\n        return {\r\n        ...state,\r\n        modalOpen: true\r\n        }\r\n\r\n        case types.uiCloseModal:\r\n            return {\r\n            ...state,\r\n            modalOpen: false\r\n                \r\n            }\r\n           \r\n\r\n        default:\r\n            return state;\r\n            \r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    // uid: null,\r\n    //  name: null,\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) =>{\r\n    switch (action.type) {\r\n\r\n        case types.authLogin:\r\n            return{\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false\r\n            }\r\n\r\n        case types.authCheckingFinish:\r\n        return{\r\n            ...state,\r\n            checking: false\r\n        }\r\n\r\n        case types.authLogout:\r\n            return{\r\n                checking: false,\r\n                \r\n\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { uiReducer } from \"./uiReducer\";\r\nimport { authReducer } from \"./authReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n});","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n    );\r\n","import React from 'react'\r\nimport {Provider} from 'react-redux';\r\n\r\nimport { AppRouter } from './routers/AppRouter'\r\nimport { store } from './store/store';\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store= {store}>\r\n            <AppRouter/>\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport \"../src/styles.css\";\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}